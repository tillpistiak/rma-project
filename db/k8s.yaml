apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: rma
  labels:
    app: postgres
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-internal-service
  namespace: rma
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: rma
data:
  init.sql: |
    CREATE TABLE IF NOT EXISTS dogs (
        id INT NOT NULL,
        dog_name varchar(50) NOT NULL,
        PRIMARY KEY (id)
      );

    CREATE TABLE IF NOT EXISTS comments (
          id SERIAL,
          comment varchar(500) NOT NULL,
          title varchar(50) NOT NULL,
          dog_id INT NOT NULL,
          author varchar(50) NOT NULL,
          comment_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
          PRIMARY KEY (id),
          FOREIGN KEY (dog_id) REFERENCES dogs(id)
        );

    INSERT INTO dogs VALUES (0, 'Golden Retriever');
    INSERT INTO dogs VALUES (1, 'Samojede');
    INSERT INTO dogs VALUES (2, 'Deutscher Schäferhund');
    INSERT INTO dogs VALUES (3, 'Husky');
    INSERT INTO dogs VALUES (4, 'Corgi');
    INSERT INTO dogs VALUES (5, 'Border Collie');

    INSERT INTO comments (title,comment, dog_id, author) VALUES ('Golden Retriever', 'Toller Hund, der Golden Retriever!', 0, 'Max Mustermann');
    INSERT INTO comments (title,comment, dog_id, author) VALUES ('Samojede','Toller Hund, der Samojede!', 1, 'Max Mustermann');
    INSERT INTO comments (title,comment, dog_id, author) VALUES ('Schäferhund','Toller Hund, der Schäferhund!', 2, 'Max Mustermann');
    INSERT INTO comments (title,comment, dog_id, author) VALUES ('Husky','Toller Hund, der Husky!', 3, 'Max Mustermann');
    INSERT INTO comments (title,comment, dog_id, author) VALUES ('Corgi','Toller Hund, der Corgi!', 4, 'Max Mustermann');
    INSERT INTO comments (title,comment, dog_id, author) VALUES ('Border Collie','Toller Hund, der Border Collie!', 5, 'Max Mustermann');
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: rma
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: "postgres:14"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          envFrom:
            - secretRef:
                name: postgres-secret
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdata
            - mountPath: /docker-entrypoint-initdb.d
              name: initdb
      volumes:
        - name: postgresdata
          persistentVolumeClaim:
            claimName: postgres-pvc
        - name: initdb
          configMap:
            name: postgres-config
            items:
              - key: init.sql
                path: init.sql
